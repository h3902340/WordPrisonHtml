(()=>{"use strict";var t="#FC9B45",e="#51A6FF",r="#FFFFFF",n=50,i=50,o=function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function l(t){try{c(n.next(t))}catch(t){o(t)}}function a(t){try{c(n.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(l,a)}c((n=n.apply(t,e||[])).next())}))},l=function(t,e){var r,n,i,o,l={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(c){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;o&&(o=0,a[0]&&(l=0)),l;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return l.label++,{value:a[1],done:!1};case 5:l.label++,n=a[1],a=[0];continue;case 7:a=l.ops.pop(),l.trys.pop();continue;default:if(!((i=(i=l.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){l=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){l.label=a[1];break}if(6===a[0]&&l.label<i[1]){l.label=i[1],i=a;break}if(i&&l.label<i[2]){l.label=i[2],l.ops.push(a);break}i[2]&&l.ops.pop(),l.trys.pop();continue}a=e.call(t,l)}catch(t){a=[6,t],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}},a=document.getElementById("mainCanvas"),c=a.getContext("2d");function s(t){return o(this,void 0,void 0,(function(){return l(this,(function(e){return[2,new Promise((function(e){return setTimeout(e,t)}))]}))}))}function u(o){o.isVerb?c.fillStyle=e:c.fillStyle=t;var l=n*o.word.length;c.fillRect(o.rect.x,o.rect.y,l,i),c.fillStyle=r,c.fillText(o.word,o.rect.x+.5*(l-30*o.word.length),o.rect.y+35)}function h(t,e,r){c.beginPath(),c.rect(t.x,t.y,t.w,t.h),c.lineWidth=r,c.strokeStyle=e,c.stroke()}function f(t){return o(this,void 0,void 0,(function(){var e,n,i,o;return l(this,(function(l){switch(l.label){case 0:e=function(t,e){for(var r=[],n=0;n<t.length;n+=20)r.push(t.substring(n,n+20));return r}(t),n=0,l.label=1;case 1:if(!(n<e.length))return[3,6];i=e[n],o=1,l.label=2;case 2:return o<=i.length?(c.fillStyle=r,c.fillText(i.substring(0,o),100,100+35*n),[4,s(40)]):[3,5];case 3:l.sent(),l.label=4;case 4:return o++,[3,2];case 5:return n++,[3,1];case 6:return[2]}}))}))}c.font="".concat(30,"px Arial");var y=function(){function t(){this.cardArray=[],this.inventoryTailX=110,this.inventoryTailY=350,this.rect={x:100,y:340,w:600,h:220}}return t.prototype.drawInventory=function(){var t;t=this.rect,c.fillStyle="#BEBEBE",c.fillRect(t.x,t.y,t.w,t.h);for(var e=0;e<this.cardArray.length;e++)this.cardArray[e].isSelected||u(this.cardArray[e])},t.prototype.addCard=function(t,e){var r=n*t.length;this.inventoryTailX+10+r>600&&(this.inventoryTailY+=10+i),this.cardArray.push({rect:{x:this.inventoryTailX,y:this.inventoryTailY,w:r,h:i},inventoryX:this.inventoryTailX,inventoryY:this.inventoryTailY,word:t,isVerb:e,isSelected:!1}),this.inventoryTailX=this.inventoryTailX+r+10},t}(),d=function(){function n(t,e,r){this.lineWidth=6,this.rect=t,this.isVerb=e,this.card=r}return n.prototype.drawSlot=function(){this.isVerb?h(this.rect,e,this.lineWidth):h(this.rect,t,this.lineWidth),this.card&&function(n,o,l){n.isVerb?c.fillStyle=e:c.fillStyle=t;var a=50*n.word.length,s=o-.5*a,u=l-.5*i;c.fillRect(s,u,a,i),c.fillStyle=r,c.fillText(n.word,s+.5*(a-30*n.word.length),u+35)}(this.card,this.rect.x+.5*this.rect.w,this.rect.y+.5*this.rect.h)},n}();(new(function(){function t(){this.inventory=new y,this.slotArray=[new d({x:145,y:270,w:150,h:50},!1,null),new d({x:325,y:270,w:150,h:50},!0,null),new d({x:505,y:270,w:150,h:50},!1,null)]}return t.prototype.Begin=function(){this.entrySequence()},t.prototype.entrySequence=function(){return t=this,e=void 0,n=function(){return function(t,e){var r,n,i,o,l={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(c){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;o&&(o=0,a[0]&&(l=0)),l;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return l.label++,{value:a[1],done:!1};case 5:l.label++,n=a[1],a=[0];continue;case 7:a=l.ops.pop(),l.trys.pop();continue;default:if(!((i=(i=l.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){l=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){l.label=a[1];break}if(6===a[0]&&l.label<i[1]){l.label=i[1],i=a;break}if(i&&l.label<i[2]){l.label=i[2],l.ops.push(a);break}i[2]&&l.ops.pop(),l.trys.pop();continue}a=e.call(t,l)}catch(t){a=[6,t],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}}(this,(function(t){switch(t.label){case 0:return this.drawLevel(),[4,f("這裡是哪裡？「我」醒了過來。發現在自己被困在一間「密室」。我摸著自己的口袋，沒有找到手機，無法對外聯繫。但發現一張詞卡「檢視」。這是做什麼用的？（獲得「密室」、「我」、「檢視」）")];case 1:return t.sent(),this.inventory.addCard("密室",!1),this.inventory.addCard("我",!1),this.inventory.addCard("檢視",!0),a.addEventListener("click",this.checkCardClick.bind(this)),this.drawLevel(),[2]}}))},new((r=void 0)||(r=Promise))((function(i,o){function l(t){try{c(n.next(t))}catch(t){o(t)}}function a(t){try{c(n.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(l,a)}c((n=n.apply(t,e||[])).next())}));var t,e,r,n},t.prototype.checkCardClick=function(t){var e=this,r=function(t,e){var r=t.getBoundingClientRect();return{x:e.clientX-r.left,y:e.clientY-r.top}}(a,t);this.inventory.cardArray.forEach((function(t){if(n=r,i=t.rect,n.x>i.x&&n.x<i.x+i.w&&n.y<i.y+i.h&&n.y>i.y){var n,i,o=!1;if(t.isSelected){t.rect.x=t.inventoryX,t.rect.y=t.inventoryY,t.isSelected=!1;for(var l=0;l<e.slotArray.length;l++)if(e.slotArray[l].card==t){e.slotArray[l].card=null;break}o=!0}else for(l=0;l<e.slotArray.length;l++){var a=e.slotArray[l];if(a.isVerb==t.isVerb&&!a.card){a.card=t,t.isSelected=!0,t.rect.x=a.rect.x+.5*(a.rect.w-t.rect.w),t.rect.y=a.rect.y,o=!0;break}}o&&e.drawLevel()}}))},t.prototype.drawLevel=function(){var t;t={startPos:{x:0,y:270},endPos:{x:a.width,y:a.height}},c.clearRect(t.startPos.x,t.startPos.y,t.endPos.x,t.endPos.y);for(var e=0;e<this.slotArray.length;e++)this.slotArray[e].drawSlot();this.inventory.drawInventory()},t}())).Begin()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,