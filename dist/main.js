(()=>{"use strict";var t="#FC9B45",e="#51A6FF",r="#FFFFFF",n=50,i=50,l=function(t,e,r,n){return new(r||(r=Promise))((function(i,l){function o(t){try{c(n.next(t))}catch(t){l(t)}}function a(t){try{c(n.throw(t))}catch(t){l(t)}}function c(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,a)}c((n=n.apply(t,e||[])).next())}))},o=function(t,e){var r,n,i,l,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return l={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(l[Symbol.iterator]=function(){return this}),l;function a(a){return function(c){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;l&&(l=0,a[0]&&(o=0)),o;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,n=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}},a=document.getElementById("mainCanvas"),c=a.getContext("2d");function s(t){return l(this,void 0,void 0,(function(){return o(this,(function(e){return[2,new Promise((function(e){return setTimeout(e,t)}))]}))}))}function y(l){l.isVerb?c.fillStyle=e:c.fillStyle=t;var o=n*l.word.length;c.fillRect(l.rect.x,l.rect.y,o,i),c.fillStyle=r,c.fillText(l.word,l.rect.x+.5*(o-30*l.word.length),l.rect.y+35)}c.font="".concat(30,"px Arial");var u=function(){function t(){this.cardArray=[],this.inventoryTailX=110,this.inventoryTailY=350,this.rect={x:100,y:340,w:600,h:220}}return t.prototype.drawInventory=function(){var t;t=this.rect,c.fillStyle="#BEBEBE",c.fillRect(t.x,t.y,t.w,t.h);for(var e=0;e<this.cardArray.length;e++)this.cardArray[e].isSelected||y(this.cardArray[e])},t.prototype.addCard=function(t,e){var r=n*t.length;this.inventoryTailX+10+r>600&&(this.inventoryTailY+=10+i),this.cardArray.push({rect:{x:this.inventoryTailX,y:this.inventoryTailY,w:r,h:i},inventoryX:this.inventoryTailX,inventoryY:this.inventoryTailY,word:t,isVerb:e,isSelected:!1}),this.inventoryTailX=this.inventoryTailX+r+10},t}(),h=function(){function n(){this.slotArray=[{rect:{x:145,y:270,w:150,h:50},isVerb:!1,card:null},{rect:{x:325,y:270,w:150,h:50},isVerb:!0,card:null},{rect:{x:505,y:270,w:150,h:50},isVerb:!1,card:null}],this.inventory=new u,this.inventory.addCard("密室",!1),this.inventory.addCard("我",!1),this.inventory.addCard("檢視",!0),a.addEventListener("click",this.checkCardClick.bind(this)),function(t){l(this,void 0,void 0,(function(){var t,e,n,i;return o(this,(function(l){switch(l.label){case 0:t=function(t,e){for(var r=[],n=0;n<t.length;n+=20)r.push(t.substring(n,n+20));return r}("這裡是哪裡？「我」醒了過來。發現在自己被困在一間「密室」。我摸著自己的口袋，沒有找到手機，無法對外聯繫。但發現一張詞卡「檢視」。這是做什麼用的？（獲得「密室」、「我」、「檢視」）"),e=0,l.label=1;case 1:if(!(e<t.length))return[3,6];n=t[e],i=1,l.label=2;case 2:return i<=n.length?(c.fillStyle=r,c.fillText(n.substring(0,i),100,100+35*e),[4,s(40)]):[3,5];case 3:l.sent(),l.label=4;case 4:return i++,[3,2];case 5:return e++,[3,1];case 6:return[2]}}))}))}()}return n.prototype.checkCardClick=function(t){var e=this,r=function(t,e){var r=t.getBoundingClientRect();return{x:e.clientX-r.left,y:e.clientY-r.top}}(a,t);this.inventory.cardArray.forEach((function(t){if(n=r,i=t.rect,n.x>i.x&&n.x<i.x+i.w&&n.y<i.y+i.h&&n.y>i.y){var n,i,l=!1;if(t.isSelected){t.rect.x=t.inventoryX,t.rect.y=t.inventoryY,t.isSelected=!1;for(var o=0;o<e.slotArray.length;o++)if(e.slotArray[o].card==t){e.slotArray[o].card=null;break}l=!0}else for(o=0;o<e.slotArray.length;o++){var a=e.slotArray[o];if(a.isVerb==t.isVerb&&!a.card){a.card=t,t.isSelected=!0,t.rect.x=a.rect.x+.5*(a.rect.w-t.rect.w),t.rect.y=a.rect.y,l=!0;break}}l&&e.drawLevel()}}))},n.prototype.drawLevel=function(){var n,l;n={startPos:{x:0,y:270},endPos:{x:a.width,y:a.height}},c.clearRect(n.startPos.x,n.startPos.y,n.endPos.x,n.endPos.y);for(var o=0;o<this.slotArray.length;o++)l=this.slotArray[o],c.beginPath(),c.rect(l.rect.x,l.rect.y,l.rect.w,l.rect.h),c.lineWidth=6,l.isVerb?c.strokeStyle=e:c.strokeStyle=t,c.stroke(),l.card&&function(n,l,o){n.isVerb?c.fillStyle=e:c.fillStyle=t;var a=50*n.word.length,s=l-.5*a,y=o-.5*i;c.fillRect(s,y,a,i),c.fillStyle=r,c.fillText(n.word,s+.5*(a-30*n.word.length),y+35)}(l.card,l.rect.x+.5*l.rect.w,l.rect.y+.5*l.rect.h);this.inventory.drawInventory()},n}();console.log("Hello World!"),(new h).drawLevel()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUc2QyxFQUFLOUMsS0FBS0UsRUFBRzRDLEVBQUs5QyxLQUFLUSxFQUFHc0MsRUFBSzlDLEtBQUtTLEdBQzFEeEIsRUFBSXNFLFVBQVksRUFDWlQsRUFBS3BELE9BQ0xULEVBQUl1RSxZQUFjOUUsRUFFbEJPLEVBQUl1RSxZQUFjL0UsRUFFdEJRLEVBQUl3RSxTQUNBWCxFQUFLckQsTUF4Qk4sU0FBNEJBLEVBQVlpRSxFQUFpQkMsR0FDeERsRSxFQUFLQyxPQUNMVCxFQUFJVSxVQUFZakIsRUFFaEJPLEVBQUlVLFVBQVlsQixFQUVwQixJQUFJbUIsRUFBWSxHQUFLSCxFQUFLSSxLQUFLQyxPQUMzQkcsRUFBSXlELEVBQXNCLEdBQVo5RCxFQUNkTSxFQUFJeUQsRUFBd0IsR0FBZDlFLEVBQ2xCSSxFQUFJYyxTQUFTRSxFQUFHQyxFQUFHTixFQUFXZixHQUM5QkksRUFBSVUsVUFBWWhCLEVBQ2hCTSxFQUFJa0IsU0FBU1YsRUFBS0ksS0FBTUksRUFBMEQsSUFBckRMLEVEaENDLEdDZ0NnQ0gsRUFBS0ksS0FBS0MsUUFBY0ksRUFBSSxHQUM5RixDQWFRMEQsQ0FBbUJkLEVBQUtyRCxLQUFNcUQsRUFBSzlDLEtBQUtDLEVBQWtCLEdBQWQ2QyxFQUFLOUMsS0FBS1EsRUFBUXNDLEVBQUs5QyxLQUFLRSxFQUFrQixHQUFkNEMsRUFBSzlDLEtBQUtTLEdFNkN0RkUsS0FBS1EsVUFBVVQsZUFDbkIsRUFDSixFQS9GQSxHQ0pBbUQsUUFBUUMsSUFBSSxpQkFHUSxJQUFJQyxHQUNsQmhCLFciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvZ2xvYmFsU2V0dGluZy50cyIsIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvdXRpbC50cyIsIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvaW52ZW50b3J5LnRzIiwid2VicGFjazovL215LXdlYnBhY2stcHJvamVjdC8uL3NyYy9sZXZlbDEudHMiLCJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBub3VuX2NvbG9yID0gXCIjRkM5QjQ1XCI7XG5leHBvcnQgY29uc3QgdmVyYl9jb2xvciA9IFwiIzUxQTZGRlwiO1xuZXhwb3J0IGNvbnN0IGRpYWxvZ3VlX2NvbG9yID0gXCIjRkZGRkZGXCI7XG5leHBvcnQgY29uc3QgaW52ZW50b3J5X2JhY2tncm91bmRfY29sb3IgPSBcIiNCRUJFQkVcIjtcbmV4cG9ydCBjb25zdCBjYXJkX3dpZHRoX3VuaXQgPSA1MDtcbmV4cG9ydCBjb25zdCBjYXJkX2hlaWdodCA9IDUwO1xuZXhwb3J0IGNvbnN0IGRpYWxvZ3VlX2ZvbnRfc2l6ZSA9IDMwO1xuZXhwb3J0IGNvbnN0IHR5cGVfaW50ZXJ2YWwgPSA0MDtcbmV4cG9ydCBjb25zdCBkaWFsb2d1ZV93aWR0aCA9IDIwOyIsImltcG9ydCB7IGNhcmRfaGVpZ2h0LCBjYXJkX3dpZHRoX3VuaXQsIGRpYWxvZ3VlX2NvbG9yLCBkaWFsb2d1ZV9mb250X3NpemUsIGRpYWxvZ3VlX3dpZHRoLCBub3VuX2NvbG9yLCB0eXBlX2ludGVydmFsLCB2ZXJiX2NvbG9yIH0gZnJvbSBcIi4vZ2xvYmFsU2V0dGluZ1wiO1xuaW1wb3J0IHsgQ2FyZCwgUG9zaXRpb24sIFJlY3QsIFNsb3QgfSBmcm9tIFwiLi90eXBlRGVmaW5pdGlvblwiO1xuXG5leHBvcnQgbGV0IGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5DYW52YXNcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XG5sZXQgY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQgPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuY3R4LmZvbnQgPSBgJHtkaWFsb2d1ZV9mb250X3NpemV9cHggQXJpYWxgO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2xlZXAobXM6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQ2FudmFzKGNsZWFyQXJlYTogeyBzdGFydFBvczogUG9zaXRpb24sIGVuZFBvczogUG9zaXRpb24gfSk6IHZvaWQge1xuICAgIGN0eC5jbGVhclJlY3QoY2xlYXJBcmVhLnN0YXJ0UG9zLngsIGNsZWFyQXJlYS5zdGFydFBvcy55LCBjbGVhckFyZWEuZW5kUG9zLngsIGNsZWFyQXJlYS5lbmRQb3MueSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkcmF3Q2FyZEZyb21Ub3BMZWZ0KGNhcmQ6IENhcmQpOiB2b2lkIHtcbiAgICBpZiAoY2FyZC5pc1ZlcmIpIHtcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHZlcmJfY29sb3I7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IG5vdW5fY29sb3I7XG4gICAgfVxuICAgIGxldCBjYXJkV2lkdGggPSBjYXJkX3dpZHRoX3VuaXQgKiBjYXJkLndvcmQubGVuZ3RoO1xuICAgIGN0eC5maWxsUmVjdChjYXJkLnJlY3QueCwgY2FyZC5yZWN0LnksIGNhcmRXaWR0aCwgY2FyZF9oZWlnaHQpO1xuICAgIGN0eC5maWxsU3R5bGUgPSBkaWFsb2d1ZV9jb2xvcjtcbiAgICBjdHguZmlsbFRleHQoY2FyZC53b3JkLCBjYXJkLnJlY3QueCArIChjYXJkV2lkdGggLSBkaWFsb2d1ZV9mb250X3NpemUgKiBjYXJkLndvcmQubGVuZ3RoKSAqIC41LCBjYXJkLnJlY3QueSArIDM1KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRyYXdDYXJkRnJvbUNlbnRlcihjYXJkOiBDYXJkLCBjZW50ZXJYOiBudW1iZXIsIGNlbnRlclk6IG51bWJlcik6IHZvaWQge1xuICAgIGlmIChjYXJkLmlzVmVyYikge1xuICAgICAgICBjdHguZmlsbFN0eWxlID0gdmVyYl9jb2xvcjtcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdHguZmlsbFN0eWxlID0gbm91bl9jb2xvcjtcbiAgICB9XG4gICAgbGV0IGNhcmRXaWR0aCA9IDUwICogY2FyZC53b3JkLmxlbmd0aDtcbiAgICBsZXQgeCA9IGNlbnRlclggLSBjYXJkV2lkdGggKiAuNTtcbiAgICBsZXQgeSA9IGNlbnRlclkgLSBjYXJkX2hlaWdodCAqIC41O1xuICAgIGN0eC5maWxsUmVjdCh4LCB5LCBjYXJkV2lkdGgsIGNhcmRfaGVpZ2h0KTtcbiAgICBjdHguZmlsbFN0eWxlID0gZGlhbG9ndWVfY29sb3I7XG4gICAgY3R4LmZpbGxUZXh0KGNhcmQud29yZCwgeCArIChjYXJkV2lkdGggLSBkaWFsb2d1ZV9mb250X3NpemUgKiBjYXJkLndvcmQubGVuZ3RoKSAqIC41LCB5ICsgMzUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZHJhd1Nsb3Qoc2xvdDogU2xvdCk6IHZvaWQge1xuICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICBjdHgucmVjdChzbG90LnJlY3QueCwgc2xvdC5yZWN0LnksIHNsb3QucmVjdC53LCBzbG90LnJlY3QuaCk7XG4gICAgY3R4LmxpbmVXaWR0aCA9IDY7XG4gICAgaWYgKHNsb3QuaXNWZXJiKSB7XG4gICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IHZlcmJfY29sb3I7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gbm91bl9jb2xvcjtcbiAgICB9XG4gICAgY3R4LnN0cm9rZSgpO1xuICAgIGlmIChzbG90LmNhcmQpIHtcbiAgICAgICAgZHJhd0NhcmRGcm9tQ2VudGVyKHNsb3QuY2FyZCwgc2xvdC5yZWN0LnggKyBzbG90LnJlY3QudyAqIC41LCBzbG90LnJlY3QueSArIHNsb3QucmVjdC5oICogLjUpO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRyYXdSZWN0KHJlY3Q6IFJlY3QsIGNvbG9yOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBjdHguZmlsbFN0eWxlID0gY29sb3I7XG4gICAgY3R4LmZpbGxSZWN0KHJlY3QueCwgcmVjdC55LCByZWN0LncsIHJlY3QuaCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdFN0cmluZyhzdHI6IHN0cmluZywgTjogbnVtYmVyKTogc3RyaW5nW10ge1xuICAgIGNvbnN0IGFyciA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpICs9IE4pIHtcbiAgICAgICAgYXJyLnB1c2goc3RyLnN1YnN0cmluZyhpLCBpICsgTikpO1xuICAgIH1cblxuICAgIHJldHVybiBhcnI7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzYXkodGV4dDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgbGV0IHRleHRTcGxpdCA9IHNwbGl0U3RyaW5nKHRleHQsIGRpYWxvZ3VlX3dpZHRoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRleHRTcGxpdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBsZXQgY3VycmVudFRleHQgPSB0ZXh0U3BsaXRbaV07XG4gICAgICAgIGZvciAobGV0IGogPSAxOyBqIDw9IGN1cnJlbnRUZXh0Lmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gZGlhbG9ndWVfY29sb3I7XG4gICAgICAgICAgICBjdHguZmlsbFRleHQoY3VycmVudFRleHQuc3Vic3RyaW5nKDAsIGopLCAxMDAsIDEwMCArIDM1ICogaSk7XG4gICAgICAgICAgICBhd2FpdCBzbGVlcCh0eXBlX2ludGVydmFsKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE1vdXNlUG9zKGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQsIGV2ZW50OiBNb3VzZUV2ZW50KTogUG9zaXRpb24ge1xuICAgIHZhciByZWN0ID0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHg6IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQsXG4gICAgICAgIHk6IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcCxcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNJbnNpZGUocG9zOiBQb3NpdGlvbiwgcmVjdDogUmVjdCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBwb3MueCA+IHJlY3QueCAmJiBwb3MueCA8IHJlY3QueCArIHJlY3QudyAmJlxuICAgICAgICBwb3MueSA8IHJlY3QueSArIHJlY3QuaCAmJiBwb3MueSA+IHJlY3QueTtcbn1cbiIsImltcG9ydCB7IGNhcmRfaGVpZ2h0LCBjYXJkX3dpZHRoX3VuaXQsIGludmVudG9yeV9iYWNrZ3JvdW5kX2NvbG9yIH0gZnJvbSBcIi4vZ2xvYmFsU2V0dGluZ1wiO1xuaW1wb3J0IHsgQ2FyZCwgUmVjdCB9IGZyb20gXCIuL3R5cGVEZWZpbml0aW9uXCI7XG5pbXBvcnQgeyBkcmF3Q2FyZEZyb21Ub3BMZWZ0LCBkcmF3UmVjdCB9IGZyb20gXCIuL3V0aWxcIjtcblxuZXhwb3J0IGNsYXNzIEludmVudG9yeSB7XG4gICAgcHVibGljIGNhcmRBcnJheTogQ2FyZFtdID0gW107XG5cbiAgICBwcml2YXRlIGludmVudG9yeVRhaWxYOiBudW1iZXIgPSAxMTA7XG4gICAgcHJpdmF0ZSBpbnZlbnRvcnlUYWlsWTogbnVtYmVyID0gMzUwO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgcmVjdDogUmVjdCA9IHtcbiAgICAgICAgeDogMTAwLFxuICAgICAgICB5OiAzNDAsXG4gICAgICAgIHc6IDYwMCxcbiAgICAgICAgaDogMjIwXG4gICAgfTtcblxuICAgIHB1YmxpYyBkcmF3SW52ZW50b3J5KCk6IHZvaWQge1xuICAgICAgICBkcmF3UmVjdCh0aGlzLnJlY3QsIGludmVudG9yeV9iYWNrZ3JvdW5kX2NvbG9yKVxuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jYXJkQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhcmRBcnJheVtpXS5pc1NlbGVjdGVkKSBjb250aW51ZTtcbiAgICAgICAgICAgIGRyYXdDYXJkRnJvbVRvcExlZnQodGhpcy5jYXJkQXJyYXlbaV0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGFkZENhcmQod29yZDogc3RyaW5nLCBpc1ZlcmI6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICAgICAgbGV0IGNhcmRXaWR0aCA9IGNhcmRfd2lkdGhfdW5pdCAqIHdvcmQubGVuZ3RoO1xuICAgICAgICBsZXQgbmV4dFRhaWxYID0gdGhpcy5pbnZlbnRvcnlUYWlsWCArIDEwICsgY2FyZFdpZHRoO1xuICAgICAgICBpZiAobmV4dFRhaWxYID4gNjAwKSB7XG4gICAgICAgICAgICB0aGlzLmludmVudG9yeVRhaWxZICs9IDEwICsgY2FyZF9oZWlnaHQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jYXJkQXJyYXkucHVzaCh7XG4gICAgICAgICAgICByZWN0OiB7XG4gICAgICAgICAgICAgICAgeDogdGhpcy5pbnZlbnRvcnlUYWlsWCxcbiAgICAgICAgICAgICAgICB5OiB0aGlzLmludmVudG9yeVRhaWxZLFxuICAgICAgICAgICAgICAgIHc6IGNhcmRXaWR0aCxcbiAgICAgICAgICAgICAgICBoOiBjYXJkX2hlaWdodCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbnZlbnRvcnlYOiB0aGlzLmludmVudG9yeVRhaWxYLFxuICAgICAgICAgICAgaW52ZW50b3J5WTogdGhpcy5pbnZlbnRvcnlUYWlsWSxcbiAgICAgICAgICAgIHdvcmQ6IHdvcmQsXG4gICAgICAgICAgICBpc1ZlcmI6IGlzVmVyYixcbiAgICAgICAgICAgIGlzU2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmludmVudG9yeVRhaWxYID0gdGhpcy5pbnZlbnRvcnlUYWlsWCArIGNhcmRXaWR0aCArIDEwO1xuICAgIH1cbn0iLCJpbXBvcnQgeyBJbnZlbnRvcnkgfSBmcm9tIFwiLi9pbnZlbnRvcnlcIjtcbmltcG9ydCB7IElMZXZlbCwgUG9zaXRpb24sIFNsb3QgfSBmcm9tIFwiLi90eXBlRGVmaW5pdGlvblwiO1xuaW1wb3J0IHsgc2F5LCBkcmF3U2xvdCwgY2xlYXJDYW52YXMsIGNhbnZhcywgZ2V0TW91c2VQb3MsIGlzSW5zaWRlIH0gZnJvbSBcIi4vdXRpbFwiO1xuXG5leHBvcnQgY2xhc3MgTGV2ZWwxIGltcGxlbWVudHMgSUxldmVsIHtcbiAgICBwcml2YXRlIGludmVudG9yeTogSW52ZW50b3J5O1xuICAgIHByaXZhdGUgc2xvdEFycmF5OiBTbG90W10gPSBbe1xuICAgICAgICByZWN0OiB7XG4gICAgICAgICAgICB4OiAxNDUsXG4gICAgICAgICAgICB5OiAyNzAsXG4gICAgICAgICAgICB3OiAxNTAsXG4gICAgICAgICAgICBoOiA1MCxcbiAgICAgICAgfSwgaXNWZXJiOiBmYWxzZSxcbiAgICAgICAgY2FyZDogbnVsbFxuICAgIH0sXG4gICAge1xuICAgICAgICByZWN0OiB7XG4gICAgICAgICAgICB4OiAzMjUsXG4gICAgICAgICAgICB5OiAyNzAsXG4gICAgICAgICAgICB3OiAxNTAsXG4gICAgICAgICAgICBoOiA1MFxuICAgICAgICB9LFxuICAgICAgICBpc1ZlcmI6IHRydWUsXG4gICAgICAgIGNhcmQ6IG51bGxcbiAgICB9LCB7XG4gICAgICAgIHJlY3Q6IHtcbiAgICAgICAgICAgIHg6IDUwNSxcbiAgICAgICAgICAgIHk6IDI3MCxcbiAgICAgICAgICAgIHc6IDE1MCxcbiAgICAgICAgICAgIGg6IDUwXG4gICAgICAgIH0sXG4gICAgICAgIGlzVmVyYjogZmFsc2UsXG4gICAgICAgIGNhcmQ6IG51bGxcbiAgICB9XTtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5pbnZlbnRvcnkgPSBuZXcgSW52ZW50b3J5KCk7XG4gICAgICAgIHRoaXMuaW52ZW50b3J5LmFkZENhcmQoXCLlr4blrqRcIiwgZmFsc2UpO1xuICAgICAgICB0aGlzLmludmVudG9yeS5hZGRDYXJkKFwi5oiRXCIsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5pbnZlbnRvcnkuYWRkQ2FyZChcIuaqouimllwiLCB0cnVlKTtcblxuICAgICAgICBjYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNoZWNrQ2FyZENsaWNrLmJpbmQodGhpcykpO1xuXG4gICAgICAgIHNheShcIumAmeijoeaYr+WTquijoe+8n+OAjOaIkeOAjemGkuS6humBjuS+huOAgueZvOePvuWcqOiHquW3seiiq+WbsOWcqOS4gOmWk+OAjOWvhuWupOOAjeOAguaIkeaRuOiRl+iHquW3seeahOWPo+iii++8jOaykuacieaJvuWIsOaJi+apn++8jOeEoeazleWwjeWkluiBr+e5q+OAguS9hueZvOePvuS4gOW8teipnuWNoeOAjOaqouimluOAjeOAgumAmeaYr+WBmuS7gOm6vOeUqOeahO+8n++8iOeNsuW+l+OAjOWvhuWupOOAjeOAgeOAjOaIkeOAjeOAgeOAjOaqouimluOAje+8iVwiKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2hlY2tDYXJkQ2xpY2soZXZ0OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgICAgIGxldCBtb3VzZVBvczogUG9zaXRpb24gPSBnZXRNb3VzZVBvcyhjYW52YXMsIGV2dCk7XG4gICAgICAgIHRoaXMuaW52ZW50b3J5LmNhcmRBcnJheS5mb3JFYWNoKGNhcmQgPT4ge1xuICAgICAgICAgICAgaWYgKCFpc0luc2lkZShtb3VzZVBvcywgY2FyZC5yZWN0KSkgcmV0dXJuO1xuICAgICAgICAgICAgbGV0IG5lZWRUb1JlZHJhd0xldmVsID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoY2FyZC5pc1NlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgY2FyZC5yZWN0LnggPSBjYXJkLmludmVudG9yeVg7XG4gICAgICAgICAgICAgICAgY2FyZC5yZWN0LnkgPSBjYXJkLmludmVudG9yeVk7XG4gICAgICAgICAgICAgICAgY2FyZC5pc1NlbGVjdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNsb3RBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zbG90QXJyYXlbaV0uY2FyZCA9PSBjYXJkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNsb3RBcnJheVtpXS5jYXJkID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5lZWRUb1JlZHJhd0xldmVsID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNsb3RBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBsZXQgc2xvdCA9IHRoaXMuc2xvdEFycmF5W2ldO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2xvdC5pc1ZlcmIgPT0gY2FyZC5pc1ZlcmIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2xvdC5jYXJkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xvdC5jYXJkID0gY2FyZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkLmlzU2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmQucmVjdC54ID0gc2xvdC5yZWN0LnggKyAoc2xvdC5yZWN0LncgLSBjYXJkLnJlY3QudykgKiAuNTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkLnJlY3QueSA9IHNsb3QucmVjdC55O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5lZWRUb1JlZHJhd0xldmVsID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG5lZWRUb1JlZHJhd0xldmVsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kcmF3TGV2ZWwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGRyYXdMZXZlbCgpOiB2b2lkIHtcbiAgICAgICAgY2xlYXJDYW52YXMoe1xuICAgICAgICAgICAgc3RhcnRQb3M6IHtcbiAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgIHk6IDI3MFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVuZFBvczoge1xuICAgICAgICAgICAgICAgIHg6IGNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgICAgICB5OiBjYW52YXMuaGVpZ2h0XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2xvdEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBkcmF3U2xvdCh0aGlzLnNsb3RBcnJheVtpXSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbnZlbnRvcnkuZHJhd0ludmVudG9yeSgpO1xuICAgIH1cbn0iLCJjb25zb2xlLmxvZyhcIkhlbGxvIFdvcmxkIVwiKTtcbmltcG9ydCB7TGV2ZWwxfSBmcm9tIFwiLi9sZXZlbDFcIjtcbmltcG9ydCB7IElMZXZlbCB9IGZyb20gXCIuL3R5cGVEZWZpbml0aW9uXCI7XG5sZXQgbGV2ZWw6IElMZXZlbCA9IG5ldyBMZXZlbDEoKTtcbmxldmVsLmRyYXdMZXZlbCgpOyJdLCJuYW1lcyI6WyJub3VuX2NvbG9yIiwidmVyYl9jb2xvciIsImRpYWxvZ3VlX2NvbG9yIiwiY2FyZF93aWR0aF91bml0IiwiY2FyZF9oZWlnaHQiLCJjYW52YXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY3R4IiwiZ2V0Q29udGV4dCIsInNsZWVwIiwibXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJkcmF3Q2FyZEZyb21Ub3BMZWZ0IiwiY2FyZCIsImlzVmVyYiIsImZpbGxTdHlsZSIsImNhcmRXaWR0aCIsIndvcmQiLCJsZW5ndGgiLCJmaWxsUmVjdCIsInJlY3QiLCJ4IiwieSIsImZpbGxUZXh0IiwiZm9udCIsImNhcmRBcnJheSIsImludmVudG9yeVRhaWxYIiwiaW52ZW50b3J5VGFpbFkiLCJ3IiwiaCIsImRyYXdJbnZlbnRvcnkiLCJ0aGlzIiwiaSIsImlzU2VsZWN0ZWQiLCJhZGRDYXJkIiwicHVzaCIsImludmVudG9yeVgiLCJpbnZlbnRvcnlZIiwic2xvdEFycmF5IiwiaW52ZW50b3J5IiwiSW52ZW50b3J5IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNoZWNrQ2FyZENsaWNrIiwiYmluZCIsInRleHQiLCJ0ZXh0U3BsaXQiLCJzdHIiLCJOIiwiYXJyIiwic3Vic3RyaW5nIiwic3BsaXRTdHJpbmciLCJjdXJyZW50VGV4dCIsImoiLCJzYXkiLCJldnQiLCJtb3VzZVBvcyIsImV2ZW50IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY2xpZW50WCIsImxlZnQiLCJjbGllbnRZIiwidG9wIiwiZ2V0TW91c2VQb3MiLCJmb3JFYWNoIiwicG9zIiwibmVlZFRvUmVkcmF3TGV2ZWwiLCJzbG90IiwiZHJhd0xldmVsIiwiY2xlYXJBcmVhIiwic3RhcnRQb3MiLCJlbmRQb3MiLCJ3aWR0aCIsImhlaWdodCIsImNsZWFyUmVjdCIsImJlZ2luUGF0aCIsImxpbmVXaWR0aCIsInN0cm9rZVN0eWxlIiwic3Ryb2tlIiwiY2VudGVyWCIsImNlbnRlclkiLCJkcmF3Q2FyZEZyb21DZW50ZXIiLCJjb25zb2xlIiwibG9nIiwiTGV2ZWwxIl0sInNvdXJjZVJvb3QiOiIifQ==